#!/bin/bash
# upload c code to avr microcontrollers
# usage: ./avr-make <board> <file.c> <additional args>
#        ./avr-make attiny85 blink.c
# clock speed F_CPU defined in the .c file or arg -DF_CPU=1000000

if [[ $# -eq 0 ]]; then
    echo "No arguments."; exit 1
fi

echo "Compiling $2 for $1... "

# generate elf
touch "temp.avr-gcc.output"
avr-gcc -mmcu=$1 -Os ${@:2} -Wall -o temp.elf -std=c99 >> temp.avr-gcc.output 2>&1
if [[ -f temp.elf ]]
then
    echo "Generating hex file... "
    # generate hex
    touch "temp.avr-objcopy.output"
    avr-objcopy -O ihex temp.elf temp.hex >> temp.avr-objcopy.output 2>&1
    if [[ -f temp.hex ]]
    then
        echo "Writing file to device..."
        # uploading to board
        sudo avrdude -c linuxgpio -p $1 -U flash:w:temp.hex
    else
        echo "Failed to generate hex"
        cat temp.avr-objcopy.output
    fi
else
    echo "Code does not compile"
    cat temp.avr-gcc.output
fi

# cleaning things up
echo "Cleaning..."
rm temp.* >> /dev/null 2>&1
echo "Done"
